---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {}
    http {
      server {
        listen 80;
        server_name cabezon.yonor.me;
        
        location / {
          return 301 https://$host$request_uri;
        }
      }

      server {
        listen 443 ssl;
        server_name cabezon.yonor.me;

        ssl_certificate /etc/letsencrypt/live/cabezon.yonor.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cabezon.yonor.me/privkey.pem;

        location / {
          auth_basic "Restricted Access";
          auth_basic_user_file /etc/nginx/.htpasswd;

          proxy_pass http://192.168.1.222:1111;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-reverse-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-reverse-proxy
  template:
    metadata:
      labels:
        app: nginx-reverse-proxy
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: letsencrypt
          mountPath: /etc/letsencrypt
        - name: htpasswd
          mountPath: /etc/nginx/.htpasswd
          subPath: .htpasswd
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: letsencrypt
        secret:
          secretName: letsencrypt-certs
      - name: htpasswd
        secret:
          secretName: nginx-htpasswd

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-reverse-proxy
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    name: http
  - port: 443
    targetPort: 443
    name: https
  selector:
    app: nginx-reverse-proxy